linters:
  enable:
    - asciicheck # Simple linter to check that your code does not contain non-ASCII identifiers [fast: true, auto-fix: false]
    - bodyclose # checks whether HTTP response body is closed successfully [fast: true, auto-fix: false]
    - deadcode # Finds unused code [fast: true, auto-fix: false]
    - depguard # Go linter that checks if package imports are in a list of acceptable packages [fast: true, auto-fix: false]
    - dogsled # Checks assignments with too many blank identifiers (e.g. x, _, _, _, := f()) [fast: true, auto-fix: false]
    - errcheck # Errcheck is a program for checking for unchecked errors in go programs. These unchecked errors can be critical bugs in some cases [fast: true, auto-fix: false]
    - exhaustive # check exhaustiveness of enum switch statements [fast: true, auto-fix: false]
    - exportloopref # checks for pointers to enclosing loop variables [fast: true, auto-fix: false]
    - goconst # Finds repeated strings that could be replaced by a constant [fast: true, auto-fix: false]
    - gocritic # The most opinionated Go source code linter [fast: true, auto-fix: false]
    - goprintffuncname # Checks that printf-like functions are named with `f` at the end [fast: true, auto-fix: false]
    - gosimple # (megacheck) Linter for Go source code that specializes in simplifying a code [fast: true, auto-fix: false]
    - govet # (vet, vetshadow) Vet examines Go source code and reports suspicious constructs, such as Printf calls whose arguments do not align with the format string [fast: true, auto-fix: false]
    - ineffassign # Detects when assignments to existing variables are not used [fast: true, auto-fix: false]
    - misspell # Finds commonly misspelled English words in comments [fast: true, auto-fix: true]
    - nolintlint # Reports ill-formed or insufficient nolint directives [fast: true, auto-fix: false]
    - rowserrcheck # checks whether Err of rows is checked successfully [fast: true, auto-fix: false]
    - exportloopref # Scopelint checks for unpinned variables in go programs [fast: true, auto-fix: false]
    - staticcheck # (megacheck): Staticcheck is a go vet on steroids, applying a ton of static analysis checks [fast: true, auto-fix: false]
    - structcheck # Finds unused struct fields [fast: true, auto-fix: false]
    - stylecheck # Stylecheck is a replacement for golint [fast: true, auto-fix: false]
    - typecheck # Like the front-end of a Go compiler, parses and type-checks Go code [fast: true, auto-fix: false]
    - unconvert # Remove unnecessary type conversions [fast: true, auto-fix: false]
    - unparam # Reports unused function parameters [fast: true, auto-fix: false]
    - varcheck # Finds unused global variables and constants [fast: true, auto-fix: false]
    - whitespace # Tool for detection of leading and trailing whitespace [fast: true, auto-fix: true]
    - goheader # Checks is file header matches to pattern [fast: true, auto-fix: false]
    - gomodguard # Allow and block list linter for direct Go module dependencies. This is different from depguard where there are different block types for example version constraints and module recommendations. [fast: true, auto-fix: false]
    - prealloc # Finds slice declarations that could potentially be preallocated [fast: true, auto-fix: false]
    - sqlclosecheck # Checks that sql.Rows and sql.Stmt are closed. [fast: true, auto-fix: false]
    - testpackage # linter that makes you use a separate _test package [fast: true, auto-fix: false]
    - goimports # Goimports does everything that gofmt does. Additionally it checks unused imports [fast: true, auto-fix: true]
    - gocognit # Computes and checks the cognitive complexity of functions [fast: true, auto-fix: false]
    - gocyclo # Computes and checks the cyclomatic complexity of functions [fast: true, auto-fix: false]

  disable:
    - dupl # Tool for code clone detection [fast: true, auto-fix: false]
    - gci # Gci control golang package import order and make it always deterministic. [fast: true, auto-fix: true]
    - gochecknoglobals # Checks that no globals are present in Go code [fast: true, auto-fix: false]
    - gochecknoinits # Checks that no init functions are present in Go code [fast: true, auto-fix: false]
    - wsl # Whitespace Linter - Forces you to use empty lines! [fast: true, auto-fix: false]
    - unused # (megacheck): Checks Go code for unused constants, variables, functions and types [fast: false, auto-fix: false]+
    - gofmt # Gofmt checks whether code was gofmt-ed. By default this tool runs with -s option to check for code simplification [fast: true, auto-fix: true]
    - godot # Check if comments end in a period [fast: true, auto-fix: true]
    - golint # Golint differs from gofmt. Gofmt reformats Go source code, whereas golint prints out style mistakes [fast: true, auto-fix: false]
    - interfacer # Linter that suggests narrower interface types [fast: true, auto-fix: false]
    - nlreturn # nlreturn checks for a new line before return and branch statements to increase code clarity [fast: true, auto-fix: false]
    - gomnd # An analyzer to detect magic numbers. [fast: true, auto-fix: false]
    - gosec # (gas): Inspects source code for security problems [fast: true, auto-fix: false]
    - godox # Tool for detection of FIXME, TODO and other comment keywords [fast: true, auto-fix: false]
    - funlen # Tool for detection of long functions [fast: true, auto-fix: false]
    - lll # Reports long lines [fast: true, auto-fix: false]
    - nakedret # Finds naked returns in functions greater than a specified function length [fast: true, auto-fix: false]
    - goerr113 # Golang linter to check the errors handling expressions [fast: true, auto-fix: false]
    - maligned # Tool to detect Go structs that would take less memory if their fields were sorted [fast: true, auto-fix: false]
    - nestif # Reports deeply nested if statements [fast: true, auto-fix: false]
    - noctx #  noctx finds sending http request without context.Context [fast: true, auto-fix: false]
    - gofumpt # Gofumpt checks whether code was gofumpt-ed. [fast: true, auto-fix: true]

run:
  timeout: 5m
  skip-dirs:
    - internal/exported
    - bin
    - vendor
    - misc
    - log
    - external
    - config
    - scripts
    - tmp
    - tools/converter

output:
  format: colored-line-number
  print-issued-lines: true
  print-linter-name: true

linters-settings:
  gocyclo:
    min-complexity: 100

  gocognit:
    min-complexity: 100

  gocritic:
    disabled-checks:
      - ifElseChain
      - singleCaseSwitch # Every time this occured in the code, there  was no other way.

